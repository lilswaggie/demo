<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>大屏3d地图</title>
    <script src="../../lib/jquery-1.12.4.min.js"></script>
    <script src="../../lib/echarts4/echarts.js"></script>
    <script src="../../lib/echarts-gl/echarts_gl.js"></script>
    <script src="../../geodata/china.js"></script>
</head>
<body>
    <div id="g_map" style="width:100%;height:800px; background: url(../../images/456.png)"></div>
<script type="text/javascript">
    var e_map = echarts.init(document.getElementById("g_map"));

    $.get('http://localhost:63342/SOTN/geodata/flights.json',function(data){

        /*
         airline.json
        function getAirportCoord(idx) {
            return [data.airports[idx][3], data.airports[idx][4]];
        }
        var routes = data.routes.map(function(airline) {
            return [
                getAirportCoord(airline[1]),
                getAirportCoord(airline[2])
            ];
        });*/
        $.get('../../geodata/world11.json',function(mapJson) {
            console.error('mapJson', mapJson);
            var datas = [];
            $.each(mapJson.features, function (index, item) {
                var row = {};
                //row.name = item.properties.NAME;
                //row.lon = item.CP[0];
                //row.lat = item.CP[1];
                //data.push(row);
                datas.push("1");
            });
            echarts.registerMap('world', mapJson);
            var airports = data.airports.map(function (item) {
                return {
                    coord: [item[3], item[4]]
                }
            });
            function getAirportCoord(idx) {
                return [data.airports[idx][3], data.airports[idx][4]];
            }

            // Route: [airlineIndex, sourceAirportIndex, destinationAirportIndex]
            var routesGroupByAirline = {};
            data.routes.forEach(function (route) {
                var airline = data.airlines[route[0]];
                var airlineName = airline[0];
                if (!routesGroupByAirline[airlineName]) {
                    routesGroupByAirline[airlineName] = [];
                }
                routesGroupByAirline[airlineName].push(route);
            });

            var pointsData = [];
            data.routes.forEach(function (airline) {
                pointsData.push(getAirportCoord(airline[1]));
                pointsData.push(getAirportCoord(airline[2]));
            });

            var series = [];
            var series = data.airlines.map(function (airline) {
                var airlineName = airline[0];
                var routes = routesGroupByAirline[airlineName];

                if (!routes) {
                    return null;
                }
                return {
                    type: 'lines3D',
                    name: airlineName,

                    effect: {
                        show: true,
                        trailWidth: 2,
                        trailLength: 0.15,
                        trailOpacity: 1,
                        trailColor: 'rgb(30, 30, 60)'
                    },

                    lineStyle: {
                        width: 1,
                        color: 'rgb(50, 50, 150)',
                        // color: 'rgb(118, 233, 241)',
                        opacity: 0.1
                    },
                    blendMode: 'lighter',

                    data: routes.map(function (item) {
                        return [airports[item[1]].coord, airports[item[2]].coord];
                    })
                };
            }).filter(function (series) {
                return !!series;
            });

            series.push({
                type: 'scatter3D',
                coordinateSystem: 'globe',
                blendMode: 'lighter',
                symbolSize: 2,
                itemStyle: {
                    color: 'rgb(50, 50, 150)',
                    opacity: 0.2
                },
                data: pointsData
            });

            var series1 = [{
                type: 'lines3D',
                name: '王宁测试',

                effect: {
                    show: true,
                    trailWidth: 3,
                    trailLength: 0.15,
                    trailOpacity: 1,
                   // trailColor: 'rgb(30, 30, 60)'
                    trailColor:'red'
                },

                lineStyle: {
                    width: 1,
                    //color: 'rgb(50, 50, 150)',
                     color: 'rgb(118, 233, 241)',
                    opacity: 0.1
                },
                blendMode: 'lighter',

                data: [[[116.4136103013,39.9110666857],[132.5390625000,-25.6415263731]],[[116.4136103013,39.9110666857],[-0.368333,51.874722]]]
            }];


            console.error('pointsData',pointsData);
            //创建贴图

            var canvas = document.createElement('canvas');
            var mapChart = echarts.init(canvas, null, {
                width: 4096, height: 2048
            });

            mapChart.setOption({
                color:'red',
                series : [
                    /*{
                        type: 'map',
                        map: 'world',//world是html页面引入的地图文件名字
                        // 绘制完整尺寸的 echarts 实例
                        top: 0, left: 0,
                        right: 0, bottom: 0,
                        //silent:true,//图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。
                        boundingCoords: [[-180, 90], [180, -90]],
                        itemStyle:{
                            normal:{
                                areaColor:"rgba(0,0,152,0.5)"
                                //areaColor:'red'
                            }},

                            label:{
                            textStyle:{
                                color:"#fff",
                                fontSize:50
                            }
                        },
                        emphasis:{
                            itemStyle:{
                                color:"red"
                            }
                        }
                    },*/
                    {
                        type: 'map',
                        map: 'china',//world是html页面引入的地图文件名字
                        // 绘制完整尺寸的 echarts 实例
                        top: 0, left: 0,
                        right: 0, bottom: 0,
                        //silent:true,//图形是否不响应和触发鼠标事件，默认为 false，即响应和触发鼠标事件。
                        boundingCoords: [[-180, 90], [180, -90]],
                        itemStyle:{
                            normal:{
                                areaColor:"rgba(0,0,152,0.5)"
                                //areaColor:'red'
                            }},


                        emphasis:{
                            itemStyle:{
                                color:'blue'
                            }
                        },
                        data:[
                            {
                                name:'山东',
                                value:999,
                                selected:true,
                                itemStyle:{
                                    areaColor:'blue'
                                }
                            }
                        ]
                    }
                ]
            });



            var option = {
                backgroundColor: '#000',
                globe: {
                  /*  viewControl:{
                        rotateSensitivity:0, //鼠标旋转灵敏度
                        zoomSensitivity:0,//鼠标缩放灵敏度
                        autoRotate:true,//地球是否自传
                        autoRotateAfterStill:0.001,//鼠标停止后多久恢复旋转(为0时暂停后不恢复旋转)
                        //alpha:160,//视角绕 x 轴，即上下旋转的角度
                        //beta:-20,//视角绕 y 轴，即左右旋转的角度。
                        targetCoord: [116.46, 39.92]//定位到哪里
                    },*/
                      //baseColor:'#fff',
                      show:true,
                      viewControl:{
                          targetCoord: [116.46, 39.92]
                      },
                    baseTexture: 'http://localhost:63342/SOTN/images/earth.jpg',
                    //baseTexture:'http://localhost:63342/SOTN/images/123.png',
                    //shading:"color",

                   // heightTexture: mapChart,

                    displacementScale: 0.1,

                    shading: 'color',
                    
                    //environment: 'http://localhost:63342/SOTN/images/starfield.jpg',

                    postEffect:{
                        enable:true,
                    },

                    layers: [/*{
                        type: 'blend',
                        blendTo: 'emission',
                        texture: 'http://localhost:63342/SOTN/images/night.jpg'
                    },*/{
                        type: 'overlay',
                        blendTo: 'emission',
                        texture:mapChart
                        //texture: 'http://localhost:63342/SOTN/images/earth.jpg'
                    }],
                },
                series:series1
            }
            e_map.on('click',function(param){
                console.error('param',param);
                alert(123)
            });
            e_map.setOption(option);
        });

        

        /**
         * {
                type: 'lines3D',

                coordinateSystem: 'globe',

                blendMode: 'lighter',

                lineStyle: {
                    width: 1,
                    color: 'rgb(50, 50, 150)',
                    opacity: 0.1
                },

                data: routes
            }
         */
    });


</script>
</body>
</html>